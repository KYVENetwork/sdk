syntax = "proto3";
package kyve.registry.v1beta1;

import "./registry.proto";
// this line is used by starport scaffolding # proto/tx/import

option go_package = "github.com/KYVENetwork/kyve/x/registry/types";

// Msg defines the treasury Msg service.
service Msg {
  // CreatePool ...
  rpc CreatePool(MsgCreatePool) returns (MsgCreatePoolResponse);
  // UpdatePool ...
  rpc UpdatePool(MsgUpdatePool) returns (MsgUpdatePoolResponse);
  // DeletePool ...
  rpc DeletePool(MsgDeletePool) returns (MsgDeletePoolResponse);
  // FundPool ...
  rpc FundPool(MsgFundPool) returns (MsgFundPoolResponse);
  // DefundPool ...
  rpc DefundPool(MsgDefundPool) returns (MsgDefundPoolResponse);
  // PausePool ...
  rpc PausePool(MsgPausePool) returns (MsgPausePoolResponse);
  // UnpausePool ...
  rpc UnpausePool(MsgUnpausePool) returns (MsgUnpausePoolResponse);
  // StakePool ...
  rpc StakePool(MsgStakePool) returns (MsgStakePoolResponse);
  // UnstakePool ...
  rpc UnstakePool(MsgUnstakePool) returns (MsgUnstakePoolResponse);
  // SubmitBundleProposal ...
  rpc SubmitBundleProposal(MsgSubmitBundleProposal) returns (MsgSubmitBundleProposalResponse);
  // VoteProposal ...
  rpc VoteProposal(MsgVoteProposal) returns (MsgVoteProposalResponse);
  // ClaimUploaderRole ...
  rpc ClaimUploaderRole(MsgClaimUploaderRole) returns (MsgClaimUploaderRoleResponse);
  // DelegatePool ...
  rpc DelegatePool(MsgDelegatePool) returns (MsgDelegatePoolResponse);
  // WithdrawPool ...
  rpc WithdrawPool(MsgWithdrawPool) returns (MsgWithdrawPoolResponse);
  // UndelegatePool ...
  rpc UndelegatePool(MsgUndelegatePool) returns (MsgUndelegatePoolResponse);
  // UpdateCommission ...
  rpc UpdateCommission(MsgUpdateCommission) returns (MsgUpdateCommissionResponse);
  // this line is used by starport scaffolding # proto/tx/rpc
}

// MsgCreatePool defines a SDK message for creating a new pool.
message MsgCreatePool {
  // creator ...
  string                               creator         = 1;
  // name ...
  string                               name            = 3;
  // runtime ...
  string                               runtime         = 4;
  // logo ...
  string                               logo            = 5;
  // versions ...
  string                               versions        = 6;
  // config ...
  string                               config          = 7;
  // start_height ...
  uint64                               start_height    = 8;
  // min_bundle_size ...
  uint64                               min_bundle_size = 9;
  // operating_cost ...
  uint64                               operating_cost  = 10;
  // storage_cost ...
  uint64                               storage_cost    = 11;
  // bundle_proposal ...
  kyve.registry.v1beta1.BundleProposal bundle_proposal = 12;
}

// MsgCreatePoolResponse defines the Msg/CreatePool response type.
message MsgCreatePoolResponse {
  // id ...
  uint64 id = 1;
}

// MsgUpdatePool defines a SDK message for updating a pool.
message MsgUpdatePool {
  // creator ...
  string creator = 1;
  // id ...
  uint64 id      = 2;
}

// MsgUpdatePoolResponse defines the Msg/UpdatePool response type.
message MsgUpdatePoolResponse {}

// MsgDeletePool defines a SDK message for deleting a pool.
message MsgDeletePool {
  // creator ...
  string creator = 1;
  // id ...
  uint64 id      = 2;
}

// MsgDeletePoolResponse defines the Msg/DeletePool response type.
message MsgDeletePoolResponse {}

// MsgFundPool defines a SDK message for funding a pool.
message MsgFundPool {
  // creator ...
  string creator = 1;
  // id ...
  uint64 id      = 2;
  // amount ...
  uint64 amount  = 3;
}

// MsgFundPoolResponse defines the Msg/FundPool response type.
message MsgFundPoolResponse {}

// MsgDefundPool defines a SDK message for defunding a pool.
message MsgDefundPool {
  // creator ...
  string creator = 1;
  // id ...
  uint64 id      = 2;
  // amount ...
  uint64 amount  = 3;
}

// MsgDefundPoolResponse defines the Msg/DefundPool response type.
message MsgDefundPoolResponse {}

// MsgPausePool defines a SDK message for pausing a pool.
message MsgPausePool {
  // creator ...
  string creator = 1;
  // id ...
  uint64 id      = 2;
}

// MsgPausePoolResponse defines the Msg/PausePool response type.
message MsgPausePoolResponse {}

// MsgUnpausePool defines a SDK message for unpausing a pool.
message MsgUnpausePool {
  // creator ...
  string creator = 1;
  // id ...
  uint64 id      = 2;
}

// MsgUnpausePoolResponse defines the Msg/UnpausePool response type.
message MsgUnpausePoolResponse {}

// MsgUpdateCommission defines a SDK message for claiming the uploader role.
message MsgUpdateCommission {
  // creator ...
  string creator = 1;
  // id ...
  uint64 id      = 2;
  // commission
  string commission = 3;
}

// MsgUpdateCommissionResponse defines the Msg/UpdateCommission response type.
message MsgUpdateCommissionResponse {}

// MsgStakePool defines a SDK message for staking in a pool.
message MsgStakePool {
  // creator ...
  string creator = 1;
  // id ...
  uint64 id      = 2;
  // amount ...
  uint64 amount  = 3;
}

// MsgStakePoolResponse defines the Msg/StakePool response type.
message MsgStakePoolResponse {}

// MsgUnstakePool defines a SDK message for unstaking from a pool.
message MsgUnstakePool {
  // creator ...
  string creator = 1;
  // id ...
  uint64 id      = 2;
  // amount ...
  uint64 amount  = 3;
}

// MsgUnstakePoolResponse defines the Msg/UnstakePool response type.
message MsgUnstakePoolResponse {}

// MsgSubmitBundleProposal defines a SDK message for submitting a bundle proposal.
message MsgSubmitBundleProposal {
  // creator ...
  string creator     = 1;
  // id ...
  uint64 id          = 2;
  // bundle_id ...
  string bundle_id   = 3;
  // byte_size ...
  uint64 byte_size   = 4;
  // bundle_size ...
  uint64 bundle_size = 5;
}

// MsgSubmitBundleProposalResponse defines the Msg/SubmitBundleProposal response type.
message MsgSubmitBundleProposalResponse {}

// MsgVoteProposal defines a SDK message for voting on a bundle proposal.
message MsgVoteProposal {
  // creator ...
  string creator   = 1;
  // id ...
  uint64 id        = 2;
  // bundle_id ...
  string bundle_id = 3;
  // support ...
  bool   support   = 4;
}

// MsgVoteProposalResponse defines the Msg/VoteProposal response type.
message MsgVoteProposalResponse {}

// MsgClaimUploaderRole defines a SDK message for claiming the uploader role.
message MsgClaimUploaderRole {
  // creator ...
  string creator = 1;
  // id ...
  uint64 id      = 2;
}

// MsgClaimUploaderRoleResponse defines the Msg/ClaimUploaderRole response type.
message MsgClaimUploaderRoleResponse {}

// MsgDelegatePool defines a SDK message for delegating to a protocol node in a specific pool.
message MsgDelegatePool {
  // creator ...
  string creator = 1;
  // id ...
  uint64 id      = 2;
  // staker ...
  string staker  = 3;
  // amount ...
  uint64 amount  = 4;
}

// MsgDelegatePoolResponse defines the Msg/DelegatePool response type.
message MsgDelegatePoolResponse {}

// MsgWithdrawPool defines a SDK message for withdrawing delegation rewards from a specific pool.
message MsgWithdrawPool {
  // creator ...
  string creator = 1;
  // id ...
  uint64 id      = 2;
  // staker ...
  string staker  = 3;
}

// MsgWithdrawPoolResponse defines the Msg/WithdrawPool response type.
message MsgWithdrawPoolResponse {}

// MsgUndelegatePool defines a SDK message for undelegating from a specific pool.
message MsgUndelegatePool {
  // creator ...
  string creator = 1;
  // id ...
  uint64 id      = 2;
  // staker ...
  string staker  = 3;
  // amount ...
  uint64 amount  = 4;
}

// MsgUndelegatePoolResponse defines the Msg/UndelegatePool response type.
message MsgUndelegatePoolResponse {}

// this line is used by starport scaffolding # proto/tx/message